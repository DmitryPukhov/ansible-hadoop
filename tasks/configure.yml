---
- name: remove 127.0.1.1 from /etc/hosts
  lineinfile:
    dest=/etc/hosts
    state=absent
    regexp="^127\.0\.1\.1\b"


- name: set JAVA_HOME in .bashrc
  lineinfile:
    dest: '{{ hadoop_user_home }}/.bashrc'
    line: 'export JAVA_HOME={{ java_home }}'
    regexp: '^(# *)?export JAVA_HOME='

- name: set HADOOP_HOME in .bashrc
  lineinfile:
    dest: '{{ hadoop_user_home }}/.bashrc'
    line: 'export HADOOP_HOME={{ hadoop_home }}'
    regexp: '^(# *)?export HADOOP_HOME='

- name: add PATH to HADOOP_HOME/bin in .bashrc
  lineinfile:
    dest: '{{ hadoop_user_home }}/.bashrc'
    line: 'export PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin # HADOOP-BIN-PATH'
    regexp: '# HADOOP-BIN-PATH'

- name: set JAVA_HOME in hadoop-env.sh
  lineinfile:
    dest: '{{ hadoop_home }}/etc/hadoop/hadoop-env.sh'
    line: 'export JAVA_HOME={{ java_home }}'
    regexp: '^(# *)?export JAVA_HOME='


- lineinfile: dest="{{ hadoop_home }}/etc/hadoop/hadoop-env.sh" regexp=JAVA_HOME= line="export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64"
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int < 16

- lineinfile: dest="{{ hadoop_home }}/etc/hadoop/hadoop-env.sh" regexp=JAVA_HOME= line="export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64"
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int == 16

- lineinfile: dest="{{ hadoop_home }}/etc/hadoop/hadoop-env.sh" regexp=JAVA_HOME= line="export JAVA_HOME=/usr/lib/jvm/jre-1.7.0"
  when: "ansible_os_family == 'RedHat'"

- template:
    src: yarn-site.xml
    dest: '{{ hadoop_home }}/etc/hadoop/yarn-site.xml'
    owner: '{{hadoop_user}}'
    group: '{{hadoop_group}}'
  notify:
   - restart hadoop-dfs
   - restart yarn-resourcemanager
   - restart hadoop-datanode
   - restart yarn-nodemanager

- template:
    src: core-site.xml
    dest: '{{ hadoop_home }}/etc/hadoop/core-site.xml'
    owner: '{{hadoop_user}}'
    group: '{{hadoop_group}}'
  notify:
   - restart hadoop-dfs
   - restart yarn-resourcemanager
   - restart hadoop-datanode
   - restart yarn-nodemanager

- template:
    src: slaves
    dest: "{{ hadoop_home }}/etc/hadoop/slaves"
    owner: '{{hadoop_user}}'
    group: '{{hadoop_group}}'
  notify:
   - refreshDFSNodes
   - refreshYarnNodes
   - restart hadoop-datanode
   - restart yarn-nodemanager

- command: "{{ hadoop_home }}/bin/hdfs namenode -format creates=/tmp/hadoop-root/dfs/name"
  #when: (hadoop_type_of_node == 'master') or (hadoop_type_of_node == 'namenode')

- iptables: chain=INPUT jump=ACCEPT protocol=tcp destination_port={{item}}
  ignore_errors: yes
  with_items:
  - 8088
  - 50030
  - 8030
  - 8031
  - 8032

- name: Open all ports from ip {{ item.1 }} in the firewall
  iptables: chain=INPUT jump=ACCEPT protocol=tcp source {{ item.1 }}
  ignore_errors: yes
  with_together:
      - groups.all
      - ansible_all_ipv4_addresses